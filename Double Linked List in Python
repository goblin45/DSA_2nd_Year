class Node:
    def __init__ (self, data = None):
        self.data = data
        self.next = None
        self.prev = None

class DList:
    def __init__ (self):
        self.head = None
    def create (self):
        n = int (input ("Enter first data: "))
        while (n != -1):
            new_node = Node (n)
            if self.head is None:
                self.head = new_node
            else:
                ptr = self.head
                while ptr.next is not None: 
                    ptr = ptr.next
                ptr.next = new_node
                new_node.prev = ptr
            n = int (input ("Enter next data: "))
    def display (self):
        ptr = self.head
        if (ptr == None):
            print ("List underflowed!")
        else:
            print ("The full list is: ")
            while (ptr != None):
                print (ptr.data, end = "  ")
                ptr = ptr.next
            print ()
    def insert_at_beg (self, val):
        new_node = Node (val)
        new_node.next = self.head
        self.head = new_node
    def insert_at_end (self, val):
        new_node = Node (val)
        ptr = self.head
        while (ptr.next != None):
            ptr = ptr.next
        ptr.next = new_node
        new_node.prev = ptr
    def insert_at_any (self, val):
        new_node = Node (val)
        num = int (input ("Enter the position: "))
        i = 0
        flag = 1
        if (num == 1):
            new_node.next = self.head
            self.head.prev = new_node
            self.head = new_node
        else:
            ptr = self.head
            while (i != num - 1):
                i = i + 1
                ptr = ptr.next
                if (ptr == None):
                    flag = 0
                    break
            if (flag == 0):
                print ("List is not that long!")
            else:
                preptr = ptr.prev
                new_node.prev = preptr
                new_node.next = ptr
                preptr.next = new_node
                ptr.prev = new_node
    def search (self, val):
        ptr = self.head
        n = 1
        flag = 1
        while (ptr.data != val):
            n = n + 1
            if (ptr.next == None):
                flag = 0
            ptr = ptr.next
        if (flag == 1):
            print ("The value is at position: ", n)
        else:
            print ("The value is not found!")
    def count_nodes (self):
        n = 0
        ptr = self.head
        while ptr is not None:
            ptr = ptr.next
            n = n + 1
        print ("The number of nodes in the list is: ", n)
    def delete_at_beg (self):
        self.head = self.head.next
        self.head.prev = None
    def delete_at_end (self):
        ptr = self.head
        while ptr.next is not None:
            ptr = ptr.next
        preptr = ptr.prev
        preptr.next = None
    def delete_at_any (self):
        n = int (input ("Enter the position: "))
        i = 0
        flag = 1
        if (n == 1):
            self.head = self.head.next
            self.head.prev = None
        else:
            ptr = self.head
            while (i != n - 1):
                i = i + 1
                if ptr.next is None:
                    flag = 0
                ptr = ptr.next
        if (flag == 1):
            preptr = ptr.prev
            preptr.next = ptr.next
            ptr.next.prev = preptr
        else:
            print ("The list is not that long!")

def main ():
    print ("**********MAIN MENU**********")
    print ("1. Create a list.")
    print ("2. Display the list.")
    print ("3. Insert at beginning.")
    print ("4. Insert at end.")
    print ("5. Insert at any.")
    print ("6. Count number of nodes.")
    print ("7. Search an element.")
    print ("8. Delete at beginning.")
    print ("9. Delete at end.")
    print ("10. Delete at any.")
    print ("Enter -1 to exit.")
    option = int (input ("Enter your option: "))
    list1 = DList ()
    while option != -1:
        if option == 1:
            list1.create ()
        elif option == 2:
            list1.display ()
        elif option == 3:
            val = int (input ("Enter data: "))
            list1.insert_at_beg (val)
        elif option == 4: 
            val = int (input ("Enter data: "))
            list1.insert_at_end (val)
        elif option == 5:
            val = int (input ("Enter data: "))
            list1.insert_at_any (val)
        elif option == 6:
            list1.count_nodes ()
        elif option == 7: 
            val = int (input ("Enter the value to be searched: "))
            list1.search (val)
        elif option == 8: 
            list1.delete_at_beg ()
        elif option == 9:
            list1.delete_at_end ()
        elif option == 10:
            list1.delete_at_any ()
        else:
            print ("Wrong input! Please try again!")
        option = int (input ("Enter your option again: "))
    
main ()




# **********MAIN MENU**********
# 1. Create a list.
# 2. Display the list.
# 3. Insert at beginning.
# 4. Insert at end.
# 5. Insert at any.
# 6. Count number of nodes.
# 7. Search an element.
# 8. Delete at beginning.
# 9. Delete at end.
# 10. Delete at any.
# Enter -1 to exit.
# 1. Create a list: 
# 2. Display a list: 
# 3. Insert at beginning: 
# 4. Insert at end: 
# 5. Insert at any: 
# 6. Count number of nodes: 
# 7. Search an element: 
# 8. Delete at beginning: 
# 9. Delete at end: 
# 10. Delete at any: 
# Enter -1 to exit.
# Enter your option again: 1
# Enter first data: 10
# Enter next data: 11
# Enter next data: 13
# Enter next data: 14
# Enter next data: 15
# Enter next data: -1
# Enter your option again: 2
# The full list is: 
# 10	11	13	14	15	
# Enter your option again: 3
# Enter the data: 9
# Enter your option again: 2
# The full list is: 
# 9	10	11	13	14	15	
# Enter your option again: 4
# Enter the data: 16
# Enter your option again: 2
# The full list is: 
# 9	10	11	13	14	15	16	
# Enter your option again: 5
# Enter the data: 12
# Enter the position: 4
# Enter your option again: 2
# The full list is: 
# 9	10	11	12	13	14	15	16	
# Enter your option again: 6
# The number of nodes is: 8
# Enter your option again: 7
# Enter the data: 14
# The position of the data is: 6
# Enter your option again: 8
# Enter your option again: 2
# The full list is: 
# 10	11	12	13	14	15	16	
# Enter your option again: 9
# Enter your option again: 2
# The full list is: 
# 10	11	12	13	14	15	
# Enter your option again: 10
# Enter the position: 3
# Enter your option again: 2
# The full list is: 
# 10	11	13	14	15	
# Enter your option again: -1
