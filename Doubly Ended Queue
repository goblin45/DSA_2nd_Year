#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int data;
    struct node *prev, *next;
} Node;

Node *front = NULL, *rear = NULL, *start = NULL;
void push_at_front ();
void pop_from_front ();
void push_at_rear ();
void pop_from_rear ();
void display ();

int main ()
{
    int option;
    printf ("\n**********MAIN MENU**********");
    printf ("\n1. Push at front.");
    printf ("\n2. Pop from front.");
    printf ("\n3. Push at rear.");
    printf ("\n4. Pop from rear.");
    printf ("\n5. Display the list.");
    printf ("\nEnter -1 to exit.");
    printf ("\nEnter your option: ");
    scanf ("%d", &option);
    while (option != -1)
    {
        switch (option)
        {
            case 1:
                push_at_front ();
                break;
            case 2:
                pop_from_front ();
                break;
            case 3:
                push_at_rear ();
                break;
            case 4:
                pop_from_rear ();
                break;
            case 5:
                display ();
                break;
            default:
                printf ("\nWrong input! Please try again!");
                break;
        }
        printf ("\nEnter your option again: ");
        scanf ("%d", &option);
    }
    return 0;
}

void push_at_front ()
{
    Node *new_node, *temp; 
    new_node = (Node *) malloc (sizeof (Node));
    printf ("\nEnter the data: ");
    scanf ("%d", &new_node -> data);
    new_node -> next = NULL;
    new_node -> prev = NULL;
    if (start == NULL)
    {
        front = rear = start = new_node;
    }
    else if (start -> next == NULL)
    {
        new_node -> prev = start;
        start -> next = new_node;
        rear = front = new_node;
    }
    else 
    {
        new_node -> prev = start;
        new_node -> next = front;
        front -> prev = new_node;
        start -> next = new_node;
        front = new_node;
    }
}

void pop_from_front ()
{
    Node *temp;
    if (front == NULL)
        printf ("\nQueue underflowed!");
    else
    {
        temp = front;
        front = front -> next;
        start -> next = front;
        front -> prev = start;
        printf ("\nThe value removed is: %d", temp -> data);
        free (temp);
    }
}

void push_at_rear ()
{
    Node *new_node;
    new_node = (Node *) malloc (sizeof (Node));
    printf ("\nEnter the data: ");
    scanf ("%d", &new_node -> data);
    new_node -> next = NULL;
    new_node -> prev = NULL;
    if (start == NULL)
    {
        front = rear = start = new_node;
    }
    else
    {
        new_node -> prev = rear;
        rear -> next = new_node;
        rear = new_node;
    }
}

void pop_from_rear ()
{
    Node *temp;
    if (rear == NULL)
        printf ("\nQueue underflowed!");
    else 
    {
        temp = rear;
        rear = rear -> prev;
        rear -> next = NULL;
        printf ("\nThe value is removed is: %d", temp -> data);
        free (temp);
    }
}

void display ()
{
    Node *ptr;
    if (start == NULL)
        printf ("\nThe queue is empty!");
    else
    {
        for (ptr = front; ptr != rear -> next; ptr = ptr -> next)
        {
            printf ("%d\t", ptr -> data);
            ptr = ptr -> next; 
        }
    }
}
